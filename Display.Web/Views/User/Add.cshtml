@model Display.Web.Models.UserModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Session["UserID"] != null && Session["UserRole"] as string != "Admin")
{
    Response.Redirect("/User/List");
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">User</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <i class="fa fa-list"></i>&nbsp;Add User
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Add", "User", FormMethod.Post, new { @autocomplete = "off" }))
                    {
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label class="control-label">Username<span class="error">*</span></label>
                                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @placeholder = "Username", @required = "required", @onfocusout = "checkUsername()" })
                                <label class="error" style="display:none;"></label>
                            </div>
                            <div class="form-group">
                                <label class="control-label">Password<span class="error">*</span></label>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password", @required = "required", @onfocusout="matchPassword()" })
                            </div>
                            <div class="form-group">
                                <label class="control-label">Confirm Password<span class="error">*</span></label>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Password", @required = "required", @onfocusout = "matchPassword()" })
                                <label class="error" style="display:none;"></label>
                            </div>
                            <div class="form-group">
                                <label class="control-label">User Role</label>
                                @Html.DropDownListFor(m => m.UserRole, new List<SelectListItem> { new SelectListItem { Text = "Admin", Value = "Admin" }, new SelectListItem { Text = "User", Value = "User" } }, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label class="control-label">Full Name<span class="error">*</span></label>
                                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @placeholder = "Full Name", @required = "required" })
                            </div>
                            <div class="form-group">
                                <button type="button" class="btn btn-outline btn-default" onclick="closeModal('/User/List')">Cancel</button>
                                <button type="submit" class="btn btn-outline btn-primary" onclick="return validate()">Save</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



